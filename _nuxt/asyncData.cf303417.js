import{a6 as v,i as y,a7 as D,S as x,a8 as _,R as w,u as b,E as C}from"./entry.40f52ef6.js";const O=()=>null;function E(...s){var m;const l=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(l);let[t,u,a={}]=s;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof u!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");a.server=a.server??!0,a.default=a.default??O,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0;const e=v(),f=()=>e.isHydrating?e.payload.data[t]:e.static.data[t],d=()=>f()!==void 0;e._asyncData[t]||(e._asyncData[t]={data:y(f()??((m=a.default)==null?void 0:m.call(a))??null),pending:y(!d()),error:y(e.payload._errors[t]?D(e.payload._errors[t]):null)});const r={...e._asyncData[t]};r.refresh=r.execute=(i={})=>{if(e._asyncDataPromises[t]){if(i.dedupe===!1)return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if(i._initial&&d())return f();r.pending.value=!0;const c=new Promise((n,o)=>{try{n(u(e))}catch(P){o(P)}}).then(n=>{if(c.cancelled)return e._asyncDataPromises[t];let o=n;a.transform&&(o=a.transform(n)),a.pick&&(o=k(o,a.pick)),r.data.value=o,r.error.value=null}).catch(n=>{var o;if(c.cancelled)return e._asyncDataPromises[t];r.error.value=n,r.data.value=b(((o=a.default)==null?void 0:o.call(a))??null)}).finally(()=>{c.cancelled||(r.pending.value=!1,e.payload.data[t]=r.data.value,r.error.value&&(e.payload._errors[t]=D(r.error.value)),delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=c,e._asyncDataPromises[t]};const h=()=>r.refresh({_initial:!0}),g=a.server!==!1&&e.payload.serverRendered;{const i=C();if(i&&!i._nuxtOnBeforeMountCbs){i._nuxtOnBeforeMountCbs=[];const n=i._nuxtOnBeforeMountCbs;i&&(x(()=>{n.forEach(o=>{o()}),n.splice(0,n.length)}),_(()=>n.splice(0,n.length)))}g&&e.isHydrating&&d()?r.pending.value=!1:i&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?i._nuxtOnBeforeMountCbs.push(h):a.immediate&&h(),a.watch&&w(a.watch,()=>r.refresh());const c=e.hook("app:data:refresh",n=>{if(!n||n.includes(t))return r.refresh()});i&&_(c)}const p=Promise.resolve(e._asyncDataPromises[t]).then(()=>r);return Object.assign(p,r),p}async function M(s){const l=s?Array.isArray(s)?s:[s]:void 0;await v().hooks.callHookParallel("app:data:refresh",l)}function k(s,l){const t={};for(const u of l)t[u]=s[u];return t}export{M as r,E as u};
